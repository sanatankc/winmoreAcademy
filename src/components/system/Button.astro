---
import FilledArrowCircle from '../icons/FilledArrowCircle.astro'
const { title, secondary, icon, class: className, type="button", bigButton } = Astro.props;
const primary = !secondary;

const Icon = icon ? icon : FilledArrowCircle;

---

<div class:list={[
  className,
  "[&.loading_.icon]:!hidden [&.loading_.loading-icon]:!block"
]}>
  <button 
    class:list={[
      "flex flex-row items-center py-2 px-5 bg-accent button overflow-hidden relative",
      primary ? "primary" : "secondary",
      bigButton && 'py-3 px-6'
    ]}
    type={type}
    >
    <span class:list={[primary ? "text-white" : "text-green-400", "font-semibold", "text-lg max-md:text-base uppercase tracking-widest"]}>
      <slot/>
    </span>
    <div class="w-5 h-5 ml-2 icon rounded-full relative flex items-center justify-center">
      <div class="w-3 h-3 bg-white absolute z-0">

      </div>
      <div class="relative z-10"> 
        <slot name="icon">
          <Icon color={primary ? "white" : "#3C674F"} />
        </slot>
      </div>
    </div>
    <div class="w-8 h-8 ml-2 loading-icon hidden">
      <svg version="1.1" id="L9" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  viewBox="0 0 100 100" enable-background="new 0 0 0 0" xml:space="preserve">
    <path d="M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50">
      <animateTransform 
         attributeName="transform" 
         attributeType="XML" 
         type="rotate"
         dur="1s" 
         from="0 50 50"
         to="360 50 50" 
         repeatCount="indefinite" />
  </path>
</svg>


    </div>
  </button>
</div>

<style>
  .button:before {
    content: '';
    position: absolute;
    width: 100px;
    height: 100%;
    background-image: linear-gradient(
        120deg,
        rgba(255,255,255, 0) 30%,
        rgba(255,255,255, .8),
        rgba(255,255,255, 0) 70%
    );
    top: 0;
    left: -100px;
    opacity: 0.6;
    animation: none; /* Animation */
  }

  .button {
    transition: all 0.3s ease-in-out;
    /* transform: scale(1); */
  }

  .button:hover::before{
    animation: shine 1.5s ease-out infinite;
  }

  .button.secondary:hover::before {
    animation: none;
  }

  .button .icon {
    transition: all 0.3s ease-in-out;
  }
  .button:hover .icon {
    transform: translateX(4px);
  }
  

  .button:hover {
    transform: scale(1.05);
    border-color: rgba(255, 255, 255, 0.6)
  }

  @keyframes shine {
    0% {left: -100px}
    60% {left: 100%}
    100% {left: 100%}
  }
</style>